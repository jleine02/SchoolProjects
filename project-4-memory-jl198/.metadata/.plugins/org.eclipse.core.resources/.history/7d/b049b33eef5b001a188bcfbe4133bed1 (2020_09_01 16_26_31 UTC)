import java.awt.Container;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

public class MemoryGame implements ActionListener {
	
	private JFrame frame;
	private Container playArea;
	private ImageIcon[] cards;
	
	public MemoryGame() {
		this.frame = new JFrame("Memory Game");
		this.frame.setSize(800, 800);
		this.frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.playArea = this.frame.getContentPane();
		this.playArea.setLayout(new GridLayout(4, 4, 5, 5));

		
		// load the cards (images) into the cards array
		cards = new ImageIcon[9];
		cards[0] = new ImageIcon("Ada-Lovelace.jpg");
		cards[1] = new ImageIcon("ADM-Grace-Hopper.jpg");
		cards[2] = new ImageIcon("Alan-Turing.jpg");
		cards[3] = new ImageIcon("Bjarne-Straustroup.jpg");
		cards[4] = new ImageIcon("Dennis-Ritchie.jpg");
		cards[5] = new ImageIcon("James-Gosling.jpg");
		cards[6] = new ImageIcon("Joe-ORourke.jpg");
		cards[7] = new ImageIcon("Steve-Wozniak.jpg");
		cards[8] = new ImageIcon("back-of-card.png");
		
		// rescale images
		for(int i = 0; i < cards.length - 1; i++) {
			ImageIcon imageIcon = cards[i];
			Image image = imageIcon.getImage(); // transform it 
			Image newimg = image.getScaledInstance(200, 200,  Image.SCALE_SMOOTH); // scale it the smooth way  
			imageIcon = new ImageIcon(newimg);  // transform it back
			cards[i] = imageIcon;
		}
		
		// Create an array of 16 total id numbers using 8 card ids and then randomize their order
		Integer[] duplicatedCardIDNumbers = {0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7};
				
		Random rand = new Random();
		for (int i = 0; i < duplicatedCardIDNumbers.length; i++) {
			int randomIndexToSwap = rand.nextInt(duplicatedCardIDNumbers.length);
			int temp = duplicatedCardIDNumbers[randomIndexToSwap];
			duplicatedCardIDNumbers[randomIndexToSwap] = duplicatedCardIDNumbers[i];
			duplicatedCardIDNumbers[i] = temp;
		}
		
		// add cards to the playArea
		CardController controller = new CardController();
		for(int i = 0; i < duplicatedCardIDNumbers.length; i++) {
			int cardID = duplicatedCardIDNumbers[i];
			Card currentCard = new Card(this.cards[cardID], cards[8], cardID, controller);
			currentCard.addActionListener(this);
			playArea.add(currentCard);
		}

		this.frame.setVisible(true);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Card card = ((Card) e.getSource());
		card.getController().faceUp(card);
	}
}
